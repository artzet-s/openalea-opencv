# This file has been automatically generated by pkg_builder

from openalea.core import *

__name__ = 'openalea.opencv.deprecated'
__version__ = '1.0.0'
__license__ = 'CeCILL-C'
__author__ = 'M.Mielewczik, C.Fournier, C. Pradal'
__institutes__ = None
__description__ = ''
__url__ = 'http://openalea.gforge.inria.fr'

__editable__ = 'True'
__icon__ = 'icon.png'
__alias__ = []


__all__ = ['opencv2_loadimage', 'opencv2_showimageinwindow',  'opencv2_hsvseg',]

#OpenAlea knows several predefined interfaces for inputs and outputs: IFloat, IInt, IStr, IBool, IFileStr, IDirStr, IRGBColor, IEnumStr, ISequence, ITuple, IDict, 
#But it is also possible to define additional Custom Interfaces: see documentation Automatic widget creation
flags = ['None', 'cv.CV_CALIB_CB_ADAPTIVE_THRESH']

opencv2_imagesubtraction = Factory(name='imagesubtraction',
                authors=' (M.Mielewczik)',
                description='Subtracts image2 from image1',
                category='Image Processing',
                nodemodule='openalea.opencv.deprecated',
                nodeclass='imagesubtraction',
                #inputs=[{'interface': IFileStr, 'name': 'Image'}],
                outputs=({'interface': None, 'name': 'Image'},),
                widgetmodule=None,
                widgetclass=None,
               )
__all__.append('opencv2_imagesubtraction')                

opencv2_imageaddition = Factory(name='imageaddition',
                authors=' (M.Mielewczik)',
                description='',
                category='Image Processing',
                nodemodule='openalea.opencv.deprecated',
                nodeclass='imageaddition',
                #inputs=[{'interface': IFileStr, 'name': 'Image'}],
                outputs=({'interface': None, 'name': 'out'},),
                widgetmodule=None,
                widgetclass=None,
               )
__all__.append('opencv2_imageaddition') 

opencv2_loadimage = Factory(name='loadimage',
                authors=' (M.Mielewczik)',
                description='',
                category='Unclassified',
                nodemodule='openalea.opencv.deprecated',
                nodeclass='loadimage',
                inputs=[{'interface': IFileStr, 'name': 'Image'}],
                outputs=({'interface': None, 'name': 'out'},),
                widgetmodule=None,
                widgetclass=None,
               )



opencv2_showimageinwindow = Factory(name='showimageinwindow',
                authors=' (M.Mielewczik)',
                description='',
                category='Unclassified',
                nodemodule='openalea.opencv.deprecated',
                nodeclass='showimageinwindow',
                #inputs=[{'interface': IFileStr, 'name': 'Image'}],
                outputs=({'interface': None, 'name': 'out'},),
                widgetmodule=None,
                widgetclass=None,
               )

         

opencv2_hsvseg = Factory(name='hsvseg',
                authors=' (M.Mielewczik)',
                description='',
                category='Image Processing',
                nodemodule='openalea.opencv.deprecated',
                nodeclass='hsvseg',
                inputs=[{'interface': None, 'name': 'Image'},
                        {'interface': ITuple, 'name': 'HSVmin', 'value':(0,0,0)},
                        {'interface': ITuple, 'name': 'HSVmax', 'value':(255,255,223)}],
                outputs=({'interface': None, 'name': 'out'},),
                widgetmodule=None,
                widgetclass=None,
               )


opencv2_createemptyimagergb = Factory(name='createemptyimagergb',
 authors=' (M.Mielewczik)',
                description='',
                category='Image Processing',
                nodemodule='openalea.opencv.deprecated',
                nodeclass='createemptyimagergb',
                inputs=[{'interface': IInt, 'name': 'Height', 'value': 1}, 
                        {'interface': IInt, 'name': 'Width', 'value': 1}],
                outputs=[{'interface': None, 'name': 'Image'}], #Bugfixed by changing the brackets
                widgetmodule=None,
                widgetclass=None,
               )
               
__all__.append('opencv2_createemptyimagergb')

opencv2_createemptyimage = Factory(name='createemptyimage',
 authors=' (M.Mielewczik)',
                description='',
                category='Image Processing',
                nodemodule='openalea.opencv.deprecated',
                nodeclass='createemptyimage',
                inputs=[{'interface': IInt, 'name': 'Height', 'value': 1}, 
                        {'interface': IInt, 'name': 'Width', 'value': 1}],
                outputs=[{'interface': None, 'name': 'Image'}], #Bugfixed by changing the brackets
                widgetmodule=None,
                widgetclass=None,
               )
               
__all__.append('opencv2_createemptyimage')

opencv2_copycroptoemptyimage = Factory(name='copycroptoemptyimage',
 authors=' (M.Mielewczik)',
                description='',
                category='Image Processing',
                nodemodule='openalea.opencv.deprecated',
                nodeclass='copycroptoemptyimage',
                inputs=[{'interface': None, 'name': 'CroppedImage'},
                        {'interface': None, 'name': 'Emptyimage'}, 
                        {'interface': IInt, 'name': 'y1', 'value': 1}, 
                        {'interface': IInt, 'name': 'y2', 'value': 1}, 
                        {'interface': IInt, 'name': 'x1', 'value': 1},
                        {'interface': IInt, 'name': 'x2', 'value': 1}],
                outputs=[{'interface': None, 'name': 'Image'}], 
                widgetmodule=None,
                widgetclass=None,
               )
               
__all__.append('opencv2_copycroptoemptyimage')

opencv2_copycroptoemptyimagebinary = Factory(name='copycroptoemptyimagebinary',
 authors=' (M.Mielewczik)',
                description='',
                category='Image Processing',
                nodemodule='openalea.opencv.deprecated',
                nodeclass='copycroptoemptyimagebinary',
                inputs=[{'interface': None, 'name': 'CroppedImage'},
                        {'interface': None, 'name': 'Emptyimage'}, 
                        {'interface': IInt, 'name': 'y1', 'value': 1}, 
                        {'interface': IInt, 'name': 'y2', 'value': 1}, 
                        {'interface': IInt, 'name': 'x1', 'value': 1},
                        {'interface': IInt, 'name': 'x2', 'value': 1}],
                outputs=[{'interface': None, 'name': 'Image'}], 
                widgetmodule=None,
                widgetclass=None,
               )
               
__all__.append('opencv2_copycroptoemptyimagebinary')

opencv2_splithsvtohuegray = Factory(name='splithsvtohuegray',
 authors=' (M.Mielewczik)',
                description='',
                category='Image Processing',
                nodemodule='openalea.opencv.deprecated',
                nodeclass='splithsvtohuegray',
                inputs=[{'interface': None, 'name': 'Image'}],
                outputs=[{'interface': None, 'name': 'Image'}], 
                widgetmodule=None,
                widgetclass=None,
               )               
__all__.append('opencv2_splithsvtohuegray')

opencv2_area = Factory(name='area',
                authors=' (M.Mielewczik)',
                description='',
                category='Image Analysis',
                nodemodule='openalea.opencv.deprecated',
                nodeclass='area',
                #inputs=[{'interface': IFileStr, 'name': 'Image'}],
                outputs=({'interface': None, 'name': 'out'},),
                widgetmodule=None,
                widgetclass=None,
               )
__all__.append('opencv2_area')

opencv2_adaptiveThresholdMean = Factory(name='adaptiveThresholdMean',
                authors=' (M.Mielewczik)',
                description='',
                category='Image Processing',
                nodemodule='openalea.opencv.deprecated',
                nodeclass='adaptiveThresholdMean',
                #inputs=[{'interface': IFileStr, 'name': 'Image'}],
                outputs=({'interface': None, 'name': 'out'},),
                widgetmodule=None,
                widgetclass=None,
               )

# not deprecated realy, but to be kept in phenomenal rather
opencv2_skeleton = Factory(name='skeleton',
                authors=' (M.Mielewczik)',
                description='Compute skimage morphological thining skeleton on a binary image',
                category='Image Processing',
                nodemodule='openalea.opencv.deprecated',
                nodeclass='skeleton',
                inputs=[{'interface': None, 'name': 'Image'}],
                outputs=({'interface': None, 'name': 'skeleton'},),
                widgetmodule=None,
                widgetclass=None,
               )
__all__.append('opencv2_skeleton')

    

